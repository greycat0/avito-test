{"version":3,"sources":["components/Post.js","components/Home.js","store/actionCreators.js"],"names":["Post","props","state","data","loading","this","setState","axios","get","newsId","then","fetchNews","nextProps","Item","actions","StarOutlined","className","score","MessageOutlined","descendants","Meta","title","to","description","Date","time","toLocaleDateString","by","React","Component","timer","Home","getNews","setInterval","ReloadOutlined","onClick","itemLayout","size","rowKey","id","dataSource","news","renderItem","item","mapDispatchToProps","dispatch","a","type","SET_LOADING","payload","params","orderBy","limitToFirst","GET_NEWS","connect"],"mappings":"sSAqEeA,E,kDA1DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,KACNC,SAAS,GAJE,E,wDAON,IAAD,OACRC,KAAKC,SAAS,CAAEF,SAAS,IACzBG,IAAMC,IAAN,qDAAwDH,KAAKJ,MAAMQ,OAAnE,UACKC,MAAK,YAAe,IAAZP,EAAW,EAAXA,KACL,EAAKG,SAAS,CAAEH,OAAMC,SAAS,S,0CAKvCC,KAAKM,c,yCAGUC,GACXA,EAAUH,SAAWJ,KAAKJ,MAAMQ,QAChCJ,KAAKM,c,+BAKT,OAAIN,KAAKH,MAAMC,OAASE,KAAKH,MAAME,QAE3B,cAAC,IAAKS,KAAN,CAEIC,QAAS,CACL,eAAC,IAAD,WACI,cAACC,EAAA,EAAD,CAAcC,UAAU,SACvBX,KAAKH,MAAMC,KAAKc,SAErB,eAAC,IAAD,WACI,cAACC,EAAA,EAAD,CAAiBF,UAAU,SAC1BX,KAAKH,MAAMC,KAAKgB,gBAT7B,SAaI,cAAC,IAAKN,KAAKO,KAAX,CACIC,MAAO,cAAC,IAAD,CAAMC,GAAE,WAAMjB,KAAKJ,MAAMQ,QAAzB,SAAoCJ,KAAKH,MAAMC,KAAKkB,QAC3DE,YACI,sBAAKP,UAAU,QAAf,UACK,IAAIQ,KAA4B,IAAvBnB,KAAKH,MAAMC,KAAKsB,MAAaC,mBAAmB,MAD9D,IACsErB,KAAKH,MAAMC,KAAKwB,SAhBzFtB,KAAKJ,MAAMQ,QAuBjB,8BAAK,cAAC,IAAD,CAAMO,UAAU,e,GArDrBY,IAAMC,W,mCCDzB,IAAIC,EAAQ,KACNC,E,kLAEF1B,KAAKJ,MAAM+B,UACNF,IACHA,EAAQG,YAAY5B,KAAKJ,MAAM+B,QAAS,Q,+BAIlC,IAAD,OACP,OACE,gCACE,wBAAQhB,UAAU,4CAAlB,SACE,sBAAMA,UAAS,wBAAmBX,KAAKJ,MAAMG,QAAU,eAAiB,IAAxE,SACE,cAAC8B,EAAA,EAAD,CACElB,UAAS,sMAGKX,KAAKJ,MAAMG,QAAU,iBAAmB,oBAH7C,6BAKT+B,QAAS,kBAAO,EAAKlC,MAAMG,SAAW,EAAKH,MAAM+B,iBAIvD,cAAC,IAAD,CACEhB,UAAU,6BACVoB,WAAW,WACXC,KAAK,QACLC,OAAQ,SAAAC,GAAE,OAAIA,GACdC,WAAYnC,KAAKJ,MAAMwC,KACvBC,WAAY,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMlC,OAAQkC,c,GA7BzBf,IAAMC,WA2CzB,IAAMe,EAAqB,CACzBZ,QClDK,WACH,8CAAO,WAAMa,GAAN,eAAAC,EAAA,6DACHD,EAAS,CAAEE,KAAMC,IAAaC,SAAS,IADpC,SAEgB1C,IAAMC,IAAI,wDAAyD,CAClF0C,OAAQ,CACJC,QAAS,SACTC,aAAc,OALnB,OAEGX,EAFH,OAQHI,EAAS,CAAEE,KAAMM,IAAUJ,QAASR,EAAKtC,OACzC0C,EAAS,CAAEE,KAAMC,IAAaC,SAAS,IATpC,2CAAP,wDDoDWK,uBAXf,SAAyBpD,GACvB,MAAO,CACLuC,KAAMvC,EAAMuC,KAAKA,KACjBrC,QAASF,EAAMuC,KAAKrC,WAQgBwC,EAAzBU,CAA6CvB","file":"static/js/6.04582080.chunk.js","sourcesContent":["import React from 'react'\nimport { List, Space, Spin } from 'antd';\nimport 'antd/lib/list/style/css'\nimport 'antd/lib/space/style/css'\nimport 'antd/lib/spin/style/css'\nimport { StarOutlined, MessageOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            loading: true\n        }\n    }\n    fetchNews() {\n        this.setState({ loading: true })\n        axios.get(`https://hacker-news.firebaseio.com/v0/item/${this.props.newsId}.json`)\n            .then(({ data }) => {\n                this.setState({ data, loading: false })\n            })\n    }\n\n    componentDidMount() {\n        this.fetchNews()\n    }\n\n    componentDidUpdate(nextProps) {\n        if (nextProps.newsId !== this.props.newsId) {\n            this.fetchNews()\n        }\n    }\n\n    render() {\n        if (this.state.data && !this.state.loading) {\n            return (\n                <List.Item\n                    key={this.props.newsId}\n                    actions={[\n                        <Space>\n                            <StarOutlined className=\"flex\" />\n                            {this.state.data.score}\n                        </Space>,\n                        <Space>\n                            <MessageOutlined className=\"flex\" />\n                            {this.state.data.descendants}\n                        </Space>\n                    ]}\n                >\n                    <List.Item.Meta\n                        title={<Link to={`/${this.props.newsId}`}>{this.state.data.title}</Link>}\n                        description={\n                            <div className=\"-mt-3\">\n                                {new Date(this.state.data.time * 1000).toLocaleDateString('ru')} {this.state.data.by}\n                            </div>\n                        }\n                    />\n                </List.Item>\n            )\n        } else {\n            return <div><Spin className=\"my-3\"/></div>\n        }\n\n    }\n}\n\nexport default Post","import React from 'react';\nimport { List } from 'antd';\nimport 'antd/lib/list/style/css'\nimport { ReloadOutlined } from '@ant-design/icons'\nimport { connect } from 'react-redux'\nimport Post from './Post'\nimport { getNews } from '../store/actionCreators'\n\n\nlet timer = null\nclass Home extends React.Component {\n  componentDidMount() {\n    this.props.getNews()\n    if (!timer) {\n      timer = setInterval(this.props.getNews, 60000)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"w-full h-14 bg-blue-500 flex items-center\">\n          <span className={`ml-auto mr-14 ${this.props.loading ? 'animate-spin' : ''}`}>\n            <ReloadOutlined\n              className={`transform transition-all \n                          hover:scale-105 text-white p-2 cursor-pointer\n                          rounded-full text-2xl leading-none\n                          ${this.props.loading ? 'bg-transparent' : 'hover:bg-blue-400'}\n                       `}\n              onClick={() => !this.props.loading && this.props.getNews()}\n            />\n          </span>\n        </header>\n        <List\n          className=\"sm:mx-20 md:mx-42 lg:mx-52\"\n          itemLayout=\"vertical\"\n          size=\"large\"\n          rowKey={id => id}\n          dataSource={this.props.news}\n          renderItem={item => <Post newsId={item} />}\n        />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    news: state.news.news,\n    loading: state.news.loading\n  }\n}\n\nconst mapDispatchToProps = {\n  getNews\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import { GET_NEWS, SET_LOADING } from './actions'\nimport axios from 'axios'\n\n\nexport function getNews() {\n    return async dispatch => {\n        dispatch({ type: SET_LOADING, payload: true })\n        const news = await axios.get('https://hacker-news.firebaseio.com/v0/newstories.json', {\n            params: {\n                orderBy: '\"$key\"',\n                limitToFirst: 100\n            }\n        })\n        dispatch({ type: GET_NEWS, payload: news.data })\n        dispatch({ type: SET_LOADING, payload: false })\n    }\n}"],"sourceRoot":""}